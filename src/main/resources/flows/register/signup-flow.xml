<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <!--creating variables-->
    <!--this variables going to RegisterModel.class-->
    <var name = "user" class="com.example.webshop.dto.User"/>
    <var name = "billing" class="com.example.webshop.dto.Address"/>

    <!-- returning and adding inside the flow a registrmodel instance -->
    <!--3.9.1. Flow Scope
        Flow scope gets allocated when a flow starts and destroyed when the flow ends.
        With the default implementation, any objects stored in flow scope need to be Serializable.-->
    <on-start>
        <evaluate expression="registerHandler.init()" result="flowScope.registerModel"/>
    </on-start>

    <!--its the start state-->
    <view-state id="personal" view="flows/register/signup-personal" model="user">
        <transition on="billing" to="validate" />
        <on-exit>
            <evaluate expression="registerHandler.addUser(flowScope.registerModel, user)"/>
        </on-exit>
    </view-state>


    <!--Validation email and password-->
    <action-state id="validate">
        <evaluate expression="registerHandler.validateUser(user, messageContext)"/>
        <transition on="success" to="billing"/>
        <transition on="failure" to="personal"/>
    </action-state>



    <view-state id="billing" view="flows/register/signup-billing" model="billing">
        <transition on="personal" to="personal"/>
        <transition on="confirm" to="confirm"/>

        <!--state store the flow instance inside the register model-->
        <on-exit>
            <evaluate expression="registerHandler.addAddress(flowScope.registerModel, billing)"/>
        </on-exit>
    </view-state>


    <view-state id="confirm" view="flows/register/signup-confirm" model="flowScope.registerModel">
        <transition on="billing" to="billing"/>
        <transition on="submit" to="submit"/>
    </view-state>

    <!--When user click Confirm-->
    <action-state id="submit" >
        <evaluate expression="registerHandler.saveAll(flowScope.registerModel)"/>
        <transition on="success" to="success"/>
    </action-state>

    <!--end state-->
    <!--id="home" take from global-transitions ... to="home"-->
    <end-state id="home" view ="externalRedirect:contextRelative:/"/>
    <end-state id="success" view ="flows/register/signup-success"/>

    <!--Global transition-->
    <!--var home getting from signup-personal.ftl Navigation-->
    <!--validate - false because when we click to home we're dont nedd the validation-->
    <global-transitions>
        <transition on="home" to="home" validate="false"/>
    </global-transitions>
</flow>